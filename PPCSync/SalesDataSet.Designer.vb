'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("SalesDataSet"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SalesDataSet
    Inherits System.Data.DataSet
    
    Private tableMDT As MDTDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MDT")) Is Nothing) Then
                MyBase.Tables.Add(New MDTDataTable(ds.Tables("MDT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MDT() As MDTDataTable
        Get
            Return Me.tableMDT
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As SalesDataSet = CType(MyBase.Clone,SalesDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MDT")) Is Nothing) Then
                MyBase.Tables.Add(New MDTDataTable(ds.Tables("MDT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMDT = CType(MyBase.Tables("MDT"),MDTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMDT) Is Nothing) Then
                Me.tableMDT.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "SalesDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SalesDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMDT = New MDTDataTable
        MyBase.Tables.Add(Me.tableMDT)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMDT() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SalesDataSet = New SalesDataSet
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub MDTRowChangeEventHandler(ByVal sender As Object, ByVal e As MDTRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MDTDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMDTNo As System.Data.DataColumn
        
        Private columnDescription As System.Data.DataColumn
        
        Private columnLastOrdNo As System.Data.DataColumn
        
        Private columnPreOrdNo As System.Data.DataColumn
        
        Private columnLenOrdNo As System.Data.DataColumn
        
        Private columnLastInvNo As System.Data.DataColumn
        
        Private columnPreInvNo As System.Data.DataColumn
        
        Private columnLenInvNo As System.Data.DataColumn
        
        Private columnLastRcptNo As System.Data.DataColumn
        
        Private columnPreRcptNo As System.Data.DataColumn
        
        Private columnLenRcptNo As System.Data.DataColumn
        
        Private columnAgentId As System.Data.DataColumn
        
        Private columnLastCInvNo As System.Data.DataColumn
        
        Private columnPreCInvNo As System.Data.DataColumn
        
        Private columnLenCInvNo As System.Data.DataColumn
        
        Private columnLastRtnNo As System.Data.DataColumn
        
        Private columnPreRtnNo As System.Data.DataColumn
        
        Private columnLenRtnNo As System.Data.DataColumn
        
        Private columnLastExNo As System.Data.DataColumn
        
        Private columnPreExNo As System.Data.DataColumn
        
        Private columnLenExNo As System.Data.DataColumn
        
        Private columnLastPrNo As System.Data.DataColumn
        
        Private columnPrePrNo As System.Data.DataColumn
        
        Private columnLenPrNo As System.Data.DataColumn
        
        Private columnLastCustNo As System.Data.DataColumn
        
        Private columnPreCustNo As System.Data.DataColumn
        
        Private columnLenCustNo As System.Data.DataColumn
        
        Private columnLastGTNo As System.Data.DataColumn
        
        Private columnPreGtNo As System.Data.DataColumn
        
        Private columnLenGtNo As System.Data.DataColumn
        
        Private columnLastDONo As System.Data.DataColumn
        
        Private columnPreDoNo As System.Data.DataColumn
        
        Private columnLenDoNo As System.Data.DataColumn
        
        Private columnLocation As System.Data.DataColumn
        
        Private columnPreITNo As System.Data.DataColumn
        
        Private columnLenITNo As System.Data.DataColumn
        
        Private columnLastITNo As System.Data.DataColumn
        
        Private columnPreCRNo As System.Data.DataColumn
        
        Private columnLenCRNo As System.Data.DataColumn
        
        Private columnLastCRNo As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MDT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MDTNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnMDTNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastOrdNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastOrdNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreOrdNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreOrdNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenOrdNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenOrdNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastRcptNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastRcptNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreRcptNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreRcptNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenRcptNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenRcptNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AgentIdColumn() As System.Data.DataColumn
            Get
                Return Me.columnAgentId
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastCInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastCInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreCInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreCInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenCInvNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenCInvNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastRtnNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastRtnNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreRtnNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreRtnNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenRtnNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenRtnNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastExNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastExNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreExNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreExNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenExNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenExNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastPrNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastPrNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrePrNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPrePrNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenPrNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenPrNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastCustNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastCustNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreCustNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreCustNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenCustNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenCustNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastGTNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastGTNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreGtNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreGtNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenGtNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenGtNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastDONoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastDONo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreDoNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreDoNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenDoNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenDoNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LocationColumn() As System.Data.DataColumn
            Get
                Return Me.columnLocation
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreITNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreITNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenITNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenITNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastITNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastITNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreCRNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnPreCRNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LenCRNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLenCRNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastCRNoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLastCRNo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MDTRow
            Get
                Return CType(Me.Rows(index),MDTRow)
            End Get
        End Property
        
        Public Event MDTRowChanging As MDTRowChangeEventHandler
        
        Public Event MDTRowChanged As MDTRowChangeEventHandler
        
        Public Event MDTRowDeleting As MDTRowChangeEventHandler
        
        Public Event MDTRowDeleted As MDTRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMDTRow(ByVal row As MDTRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMDTRow( _
                    ByVal MDTNo As String,  _
                    ByVal Description As String,  _
                    ByVal LastOrdNo As Integer,  _
                    ByVal PreOrdNo As String,  _
                    ByVal LenOrdNo As Integer,  _
                    ByVal LastInvNo As Integer,  _
                    ByVal PreInvNo As String,  _
                    ByVal LenInvNo As Integer,  _
                    ByVal LastRcptNo As Integer,  _
                    ByVal PreRcptNo As String,  _
                    ByVal LenRcptNo As Integer,  _
                    ByVal AgentId As String,  _
                    ByVal LastCInvNo As Integer,  _
                    ByVal PreCInvNo As String,  _
                    ByVal LenCInvNo As Integer,  _
                    ByVal LastRtnNo As Integer,  _
                    ByVal PreRtnNo As String,  _
                    ByVal LenRtnNo As Integer,  _
                    ByVal LastExNo As Integer,  _
                    ByVal PreExNo As String,  _
                    ByVal LenExNo As Integer,  _
                    ByVal LastPrNo As Integer,  _
                    ByVal PrePrNo As String,  _
                    ByVal LenPrNo As Integer,  _
                    ByVal LastCustNo As Integer,  _
                    ByVal PreCustNo As String,  _
                    ByVal LenCustNo As Integer,  _
                    ByVal LastGTNo As Integer,  _
                    ByVal PreGtNo As String,  _
                    ByVal LenGtNo As Integer,  _
                    ByVal LastDONo As Integer,  _
                    ByVal PreDoNo As String,  _
                    ByVal LenDoNo As Integer,  _
                    ByVal Location As String,  _
                    ByVal PreITNo As String,  _
                    ByVal LenITNo As Integer,  _
                    ByVal LastITNo As Integer,  _
                    ByVal PreCRNo As String,  _
                    ByVal LenCRNo As Integer,  _
                    ByVal LastCRNo As Integer) As MDTRow
            Dim rowMDTRow As MDTRow = CType(Me.NewRow,MDTRow)
            rowMDTRow.ItemArray = New Object() {MDTNo, Description, LastOrdNo, PreOrdNo, LenOrdNo, LastInvNo, PreInvNo, LenInvNo, LastRcptNo, PreRcptNo, LenRcptNo, AgentId, LastCInvNo, PreCInvNo, LenCInvNo, LastRtnNo, PreRtnNo, LenRtnNo, LastExNo, PreExNo, LenExNo, LastPrNo, PrePrNo, LenPrNo, LastCustNo, PreCustNo, LenCustNo, LastGTNo, PreGtNo, LenGtNo, LastDONo, PreDoNo, LenDoNo, Location, PreITNo, LenITNo, LastITNo, PreCRNo, LenCRNo, LastCRNo}
            Me.Rows.Add(rowMDTRow)
            Return rowMDTRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As MDTDataTable = CType(MyBase.Clone,MDTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New MDTDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMDTNo = MyBase.Columns("MDTNo")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnLastOrdNo = MyBase.Columns("LastOrdNo")
            Me.columnPreOrdNo = MyBase.Columns("PreOrdNo")
            Me.columnLenOrdNo = MyBase.Columns("LenOrdNo")
            Me.columnLastInvNo = MyBase.Columns("LastInvNo")
            Me.columnPreInvNo = MyBase.Columns("PreInvNo")
            Me.columnLenInvNo = MyBase.Columns("LenInvNo")
            Me.columnLastRcptNo = MyBase.Columns("LastRcptNo")
            Me.columnPreRcptNo = MyBase.Columns("PreRcptNo")
            Me.columnLenRcptNo = MyBase.Columns("LenRcptNo")
            Me.columnAgentId = MyBase.Columns("AgentId")
            Me.columnLastCInvNo = MyBase.Columns("LastCInvNo")
            Me.columnPreCInvNo = MyBase.Columns("PreCInvNo")
            Me.columnLenCInvNo = MyBase.Columns("LenCInvNo")
            Me.columnLastRtnNo = MyBase.Columns("LastRtnNo")
            Me.columnPreRtnNo = MyBase.Columns("PreRtnNo")
            Me.columnLenRtnNo = MyBase.Columns("LenRtnNo")
            Me.columnLastExNo = MyBase.Columns("LastExNo")
            Me.columnPreExNo = MyBase.Columns("PreExNo")
            Me.columnLenExNo = MyBase.Columns("LenExNo")
            Me.columnLastPrNo = MyBase.Columns("LastPrNo")
            Me.columnPrePrNo = MyBase.Columns("PrePrNo")
            Me.columnLenPrNo = MyBase.Columns("LenPrNo")
            Me.columnLastCustNo = MyBase.Columns("LastCustNo")
            Me.columnPreCustNo = MyBase.Columns("PreCustNo")
            Me.columnLenCustNo = MyBase.Columns("LenCustNo")
            Me.columnLastGTNo = MyBase.Columns("LastGTNo")
            Me.columnPreGtNo = MyBase.Columns("PreGtNo")
            Me.columnLenGtNo = MyBase.Columns("LenGtNo")
            Me.columnLastDONo = MyBase.Columns("LastDONo")
            Me.columnPreDoNo = MyBase.Columns("PreDoNo")
            Me.columnLenDoNo = MyBase.Columns("LenDoNo")
            Me.columnLocation = MyBase.Columns("Location")
            Me.columnPreITNo = MyBase.Columns("PreITNo")
            Me.columnLenITNo = MyBase.Columns("LenITNo")
            Me.columnLastITNo = MyBase.Columns("LastITNo")
            Me.columnPreCRNo = MyBase.Columns("PreCRNo")
            Me.columnLenCRNo = MyBase.Columns("LenCRNo")
            Me.columnLastCRNo = MyBase.Columns("LastCRNo")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMDTNo = New System.Data.DataColumn("MDTNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDTNo)
            Me.columnDescription = New System.Data.DataColumn("Description", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnLastOrdNo = New System.Data.DataColumn("LastOrdNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastOrdNo)
            Me.columnPreOrdNo = New System.Data.DataColumn("PreOrdNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreOrdNo)
            Me.columnLenOrdNo = New System.Data.DataColumn("LenOrdNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenOrdNo)
            Me.columnLastInvNo = New System.Data.DataColumn("LastInvNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastInvNo)
            Me.columnPreInvNo = New System.Data.DataColumn("PreInvNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreInvNo)
            Me.columnLenInvNo = New System.Data.DataColumn("LenInvNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenInvNo)
            Me.columnLastRcptNo = New System.Data.DataColumn("LastRcptNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastRcptNo)
            Me.columnPreRcptNo = New System.Data.DataColumn("PreRcptNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreRcptNo)
            Me.columnLenRcptNo = New System.Data.DataColumn("LenRcptNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenRcptNo)
            Me.columnAgentId = New System.Data.DataColumn("AgentId", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgentId)
            Me.columnLastCInvNo = New System.Data.DataColumn("LastCInvNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastCInvNo)
            Me.columnPreCInvNo = New System.Data.DataColumn("PreCInvNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCInvNo)
            Me.columnLenCInvNo = New System.Data.DataColumn("LenCInvNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenCInvNo)
            Me.columnLastRtnNo = New System.Data.DataColumn("LastRtnNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastRtnNo)
            Me.columnPreRtnNo = New System.Data.DataColumn("PreRtnNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreRtnNo)
            Me.columnLenRtnNo = New System.Data.DataColumn("LenRtnNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenRtnNo)
            Me.columnLastExNo = New System.Data.DataColumn("LastExNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastExNo)
            Me.columnPreExNo = New System.Data.DataColumn("PreExNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreExNo)
            Me.columnLenExNo = New System.Data.DataColumn("LenExNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenExNo)
            Me.columnLastPrNo = New System.Data.DataColumn("LastPrNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastPrNo)
            Me.columnPrePrNo = New System.Data.DataColumn("PrePrNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrePrNo)
            Me.columnLenPrNo = New System.Data.DataColumn("LenPrNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenPrNo)
            Me.columnLastCustNo = New System.Data.DataColumn("LastCustNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastCustNo)
            Me.columnPreCustNo = New System.Data.DataColumn("PreCustNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCustNo)
            Me.columnLenCustNo = New System.Data.DataColumn("LenCustNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenCustNo)
            Me.columnLastGTNo = New System.Data.DataColumn("LastGTNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastGTNo)
            Me.columnPreGtNo = New System.Data.DataColumn("PreGtNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreGtNo)
            Me.columnLenGtNo = New System.Data.DataColumn("LenGtNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenGtNo)
            Me.columnLastDONo = New System.Data.DataColumn("LastDONo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDONo)
            Me.columnPreDoNo = New System.Data.DataColumn("PreDoNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreDoNo)
            Me.columnLenDoNo = New System.Data.DataColumn("LenDoNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenDoNo)
            Me.columnLocation = New System.Data.DataColumn("Location", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocation)
            Me.columnPreITNo = New System.Data.DataColumn("PreITNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreITNo)
            Me.columnLenITNo = New System.Data.DataColumn("LenITNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenITNo)
            Me.columnLastITNo = New System.Data.DataColumn("LastITNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastITNo)
            Me.columnPreCRNo = New System.Data.DataColumn("PreCRNo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCRNo)
            Me.columnLenCRNo = New System.Data.DataColumn("LenCRNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLenCRNo)
            Me.columnLastCRNo = New System.Data.DataColumn("LastCRNo", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastCRNo)
            Me.columnMDTNo.MaxLength = 10
            Me.columnDescription.MaxLength = 100
            Me.columnPreOrdNo.MaxLength = 10
            Me.columnPreInvNo.MaxLength = 10
            Me.columnPreRcptNo.MaxLength = 10
            Me.columnAgentId.MaxLength = 20
            Me.columnPreCInvNo.MaxLength = 10
            Me.columnPreRtnNo.MaxLength = 10
            Me.columnPreExNo.MaxLength = 10
            Me.columnPrePrNo.MaxLength = 10
            Me.columnPreCustNo.MaxLength = 10
            Me.columnPreGtNo.MaxLength = 10
            Me.columnPreDoNo.MaxLength = 10
            Me.columnLocation.MaxLength = 10
            Me.columnPreITNo.MaxLength = 10
            Me.columnPreCRNo.MaxLength = 10
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMDTRow() As MDTRow
            Return CType(Me.NewRow,MDTRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New MDTRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(MDTRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MDTRowChangedEvent) Is Nothing) Then
                RaiseEvent MDTRowChanged(Me, New MDTRowChangeEvent(CType(e.Row,MDTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MDTRowChangingEvent) Is Nothing) Then
                RaiseEvent MDTRowChanging(Me, New MDTRowChangeEvent(CType(e.Row,MDTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MDTRowDeletedEvent) Is Nothing) Then
                RaiseEvent MDTRowDeleted(Me, New MDTRowChangeEvent(CType(e.Row,MDTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MDTRowDeletingEvent) Is Nothing) Then
                RaiseEvent MDTRowDeleting(Me, New MDTRowChangeEvent(CType(e.Row,MDTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMDTRow(ByVal row As MDTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As SalesDataSet = New SalesDataSet
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MDTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MDTRow
        Inherits System.Data.DataRow
        
        Private tableMDT As MDTDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMDT = CType(Me.Table,MDTDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MDTNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.MDTNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'MDTNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.MDTNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.DescriptionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Description' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.DescriptionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastOrdNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastOrdNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastOrdNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastOrdNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreOrdNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreOrdNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreOrdNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreOrdNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenOrdNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenOrdNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenOrdNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenOrdNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastInvNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastInvNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreInvNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreInvNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenInvNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenInvNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastRcptNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastRcptNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastRcptNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastRcptNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreRcptNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreRcptNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreRcptNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreRcptNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenRcptNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenRcptNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenRcptNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenRcptNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AgentId() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.AgentIdColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'AgentId' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.AgentIdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastCInvNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastCInvNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastCInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastCInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreCInvNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreCInvNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreCInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreCInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenCInvNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenCInvNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenCInvNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenCInvNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastRtnNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastRtnNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastRtnNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastRtnNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreRtnNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreRtnNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreRtnNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreRtnNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenRtnNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenRtnNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenRtnNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenRtnNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastExNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastExNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastExNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastExNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreExNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreExNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreExNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreExNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenExNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenExNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenExNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenExNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastPrNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastPrNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastPrNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastPrNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrePrNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PrePrNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PrePrNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PrePrNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenPrNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenPrNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenPrNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenPrNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastCustNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastCustNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastCustNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastCustNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreCustNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreCustNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreCustNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreCustNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenCustNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenCustNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenCustNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenCustNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastGTNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastGTNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastGTNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastGTNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreGtNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreGtNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreGtNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreGtNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenGtNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenGtNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenGtNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenGtNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastDONo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastDONoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastDONo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastDONoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreDoNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreDoNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreDoNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreDoNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenDoNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenDoNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenDoNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenDoNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Location() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LocationColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Location' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LocationColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreITNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreITNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreITNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreITNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenITNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenITNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenITNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenITNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastITNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastITNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastITNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastITNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PreCRNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMDT.PreCRNoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PreCRNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.PreCRNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LenCRNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LenCRNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LenCRNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LenCRNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastCRNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMDT.LastCRNoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LastCRNo' in table 'MDT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMDT.LastCRNoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMDTNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.MDTNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMDTNoNull()
            Me(Me.tableMDT.MDTNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableMDT.DescriptionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableMDT.DescriptionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastOrdNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastOrdNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastOrdNoNull()
            Me(Me.tableMDT.LastOrdNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreOrdNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreOrdNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreOrdNoNull()
            Me(Me.tableMDT.PreOrdNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenOrdNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenOrdNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenOrdNoNull()
            Me(Me.tableMDT.LenOrdNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastInvNoNull()
            Me(Me.tableMDT.LastInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreInvNoNull()
            Me(Me.tableMDT.PreInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenInvNoNull()
            Me(Me.tableMDT.LenInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastRcptNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastRcptNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastRcptNoNull()
            Me(Me.tableMDT.LastRcptNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreRcptNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreRcptNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreRcptNoNull()
            Me(Me.tableMDT.PreRcptNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenRcptNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenRcptNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenRcptNoNull()
            Me(Me.tableMDT.LenRcptNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAgentIdNull() As Boolean
            Return Me.IsNull(Me.tableMDT.AgentIdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAgentIdNull()
            Me(Me.tableMDT.AgentIdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastCInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastCInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastCInvNoNull()
            Me(Me.tableMDT.LastCInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreCInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreCInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreCInvNoNull()
            Me(Me.tableMDT.PreCInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenCInvNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenCInvNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenCInvNoNull()
            Me(Me.tableMDT.LenCInvNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastRtnNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastRtnNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastRtnNoNull()
            Me(Me.tableMDT.LastRtnNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreRtnNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreRtnNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreRtnNoNull()
            Me(Me.tableMDT.PreRtnNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenRtnNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenRtnNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenRtnNoNull()
            Me(Me.tableMDT.LenRtnNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastExNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastExNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastExNoNull()
            Me(Me.tableMDT.LastExNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreExNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreExNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreExNoNull()
            Me(Me.tableMDT.PreExNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenExNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenExNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenExNoNull()
            Me(Me.tableMDT.LenExNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastPrNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastPrNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastPrNoNull()
            Me(Me.tableMDT.LastPrNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrePrNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PrePrNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrePrNoNull()
            Me(Me.tableMDT.PrePrNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenPrNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenPrNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenPrNoNull()
            Me(Me.tableMDT.LenPrNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastCustNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastCustNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastCustNoNull()
            Me(Me.tableMDT.LastCustNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreCustNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreCustNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreCustNoNull()
            Me(Me.tableMDT.PreCustNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenCustNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenCustNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenCustNoNull()
            Me(Me.tableMDT.LenCustNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastGTNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastGTNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastGTNoNull()
            Me(Me.tableMDT.LastGTNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreGtNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreGtNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreGtNoNull()
            Me(Me.tableMDT.PreGtNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenGtNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenGtNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenGtNoNull()
            Me(Me.tableMDT.LenGtNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastDONoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastDONoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastDONoNull()
            Me(Me.tableMDT.LastDONoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreDoNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreDoNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreDoNoNull()
            Me(Me.tableMDT.PreDoNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenDoNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenDoNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenDoNoNull()
            Me(Me.tableMDT.LenDoNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLocationNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LocationColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLocationNull()
            Me(Me.tableMDT.LocationColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreITNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreITNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreITNoNull()
            Me(Me.tableMDT.PreITNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenITNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenITNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenITNoNull()
            Me(Me.tableMDT.LenITNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastITNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastITNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastITNoNull()
            Me(Me.tableMDT.LastITNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreCRNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.PreCRNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreCRNoNull()
            Me(Me.tableMDT.PreCRNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLenCRNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LenCRNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLenCRNoNull()
            Me(Me.tableMDT.LenCRNoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastCRNoNull() As Boolean
            Return Me.IsNull(Me.tableMDT.LastCRNoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastCRNoNull()
            Me(Me.tableMDT.LastCRNoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MDTRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As MDTRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MDTRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MDTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace SalesDataSetTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MDTTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MDT"
            tableMapping.ColumnMappings.Add("MDTNo", "MDTNo")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("LastOrdNo", "LastOrdNo")
            tableMapping.ColumnMappings.Add("PreOrdNo", "PreOrdNo")
            tableMapping.ColumnMappings.Add("LenOrdNo", "LenOrdNo")
            tableMapping.ColumnMappings.Add("LastInvNo", "LastInvNo")
            tableMapping.ColumnMappings.Add("PreInvNo", "PreInvNo")
            tableMapping.ColumnMappings.Add("LenInvNo", "LenInvNo")
            tableMapping.ColumnMappings.Add("LastRcptNo", "LastRcptNo")
            tableMapping.ColumnMappings.Add("PreRcptNo", "PreRcptNo")
            tableMapping.ColumnMappings.Add("LenRcptNo", "LenRcptNo")
            tableMapping.ColumnMappings.Add("AgentId", "AgentId")
            tableMapping.ColumnMappings.Add("LastCInvNo", "LastCInvNo")
            tableMapping.ColumnMappings.Add("PreCInvNo", "PreCInvNo")
            tableMapping.ColumnMappings.Add("LenCInvNo", "LenCInvNo")
            tableMapping.ColumnMappings.Add("LastRtnNo", "LastRtnNo")
            tableMapping.ColumnMappings.Add("PreRtnNo", "PreRtnNo")
            tableMapping.ColumnMappings.Add("LenRtnNo", "LenRtnNo")
            tableMapping.ColumnMappings.Add("LastExNo", "LastExNo")
            tableMapping.ColumnMappings.Add("PreExNo", "PreExNo")
            tableMapping.ColumnMappings.Add("LenExNo", "LenExNo")
            tableMapping.ColumnMappings.Add("LastPrNo", "LastPrNo")
            tableMapping.ColumnMappings.Add("PrePrNo", "PrePrNo")
            tableMapping.ColumnMappings.Add("LenPrNo", "LenPrNo")
            tableMapping.ColumnMappings.Add("LastCustNo", "LastCustNo")
            tableMapping.ColumnMappings.Add("PreCustNo", "PreCustNo")
            tableMapping.ColumnMappings.Add("LenCustNo", "LenCustNo")
            tableMapping.ColumnMappings.Add("LastGTNo", "LastGTNo")
            tableMapping.ColumnMappings.Add("PreGtNo", "PreGtNo")
            tableMapping.ColumnMappings.Add("LenGtNo", "LenGtNo")
            tableMapping.ColumnMappings.Add("LastDONo", "LastDONo")
            tableMapping.ColumnMappings.Add("PreDoNo", "PreDoNo")
            tableMapping.ColumnMappings.Add("LenDoNo", "LenDoNo")
            tableMapping.ColumnMappings.Add("Location", "Location")
            tableMapping.ColumnMappings.Add("PreITNo", "PreITNo")
            tableMapping.ColumnMappings.Add("LenITNo", "LenITNo")
            tableMapping.ColumnMappings.Add("LastITNo", "LastITNo")
            tableMapping.ColumnMappings.Add("PreCRNo", "PreCRNo")
            tableMapping.ColumnMappings.Add("LenCRNo", "LenCRNo")
            tableMapping.ColumnMappings.Add("LastCRNo", "LastCRNo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MDT] ([MDTNo], [Description], [LastOrdNo], [PreOrdNo], [LenOrd"& _ 
                "No], [LastInvNo], [PreInvNo], [LenInvNo], [LastRcptNo], [PreRcptNo], [LenRcptNo]"& _ 
                ", [AgentId], [LastCInvNo], [PreCInvNo], [LenCInvNo], [LastRtnNo], [PreRtnNo], [L"& _ 
                "enRtnNo], [LastExNo], [PreExNo], [LenExNo], [LastPrNo], [PrePrNo], [LenPrNo], [L"& _ 
                "astCustNo], [PreCustNo], [LenCustNo], [LastGTNo], [PreGtNo], [LenGtNo], [LastDON"& _ 
                "o], [PreDoNo], [LenDoNo], [Location], [PreITNo], [LenITNo], [LastITNo], [PreCRNo"& _ 
                "], [LenCRNo], [LastCRNo]) VALUES (@MDTNo, @Description, @LastOrdNo, @PreOrdNo, @"& _ 
                "LenOrdNo, @LastInvNo, @PreInvNo, @LenInvNo, @LastRcptNo, @PreRcptNo, @LenRcptNo,"& _ 
                " @AgentId, @LastCInvNo, @PreCInvNo, @LenCInvNo, @LastRtnNo, @PreRtnNo, @LenRtnNo"& _ 
                ", @LastExNo, @PreExNo, @LenExNo, @LastPrNo, @PrePrNo, @LenPrNo, @LastCustNo, @Pr"& _ 
                "eCustNo, @LenCustNo, @LastGTNo, @PreGtNo, @LenGtNo, @LastDONo, @PreDoNo, @LenDoN"& _ 
                "o, @Location, @PreITNo, @LenITNo, @LastITNo, @PreCRNo, @LenCRNo, @LastCRNo)"
            Me._adapter.InsertCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MDTNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MDTNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastOrdNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastOrdNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreOrdNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreOrdNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenOrdNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenOrdNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastInvNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreInvNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenInvNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastRcptNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastRcptNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreRcptNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreRcptNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenRcptNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenRcptNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AgentId", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AgentId", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastCInvNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastCInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreCInvNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreCInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenCInvNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenCInvNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastRtnNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastRtnNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreRtnNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreRtnNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenRtnNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenRtnNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastExNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastExNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreExNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreExNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenExNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenExNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastPrNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastPrNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PrePrNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PrePrNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenPrNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenPrNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastCustNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastCustNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreCustNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreCustNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenCustNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenCustNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastGTNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastGTNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreGtNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreGtNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenGtNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenGtNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastDONo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastDONo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreDoNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreDoNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenDoNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenDoNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Location", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Location", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreITNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreITNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenITNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenITNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastITNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastITNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreCRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PreCRNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LenCRNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LenCRNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastCRNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LastCRNo", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.PPCSync.My.MySettings.Default.SalesConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MDTNo, Description, LastOrdNo, PreOrdNo, LenOrdNo, LastInvNo, PreInvNo, Le"& _ 
                "nInvNo, LastRcptNo, PreRcptNo, LenRcptNo, AgentId, LastCInvNo, PreCInvNo, LenCIn"& _ 
                "vNo, LastRtnNo, PreRtnNo, LenRtnNo, LastExNo, PreExNo, LenExNo, LastPrNo, PrePrN"& _ 
                "o, LenPrNo, LastCustNo, PreCustNo, LenCustNo, LastGTNo, PreGtNo, LenGtNo, LastDO"& _ 
                "No, PreDoNo, LenDoNo, Location, PreITNo, LenITNo, LastITNo, PreCRNo, LenCRNo, La"& _ 
                "stCRNo FROM dbo.MDT"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SalesDataSet.MDTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As SalesDataSet.MDTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As SalesDataSet.MDTDataTable = New SalesDataSet.MDTDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As SalesDataSet.MDTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As SalesDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "MDT")
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New System.Data.DataRow() {dataRow})
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MDTNo As String,  _
                    ByVal Description As String,  _
                    ByVal LastOrdNo As System.Nullable(Of Integer),  _
                    ByVal PreOrdNo As String,  _
                    ByVal LenOrdNo As System.Nullable(Of Integer),  _
                    ByVal LastInvNo As System.Nullable(Of Integer),  _
                    ByVal PreInvNo As String,  _
                    ByVal LenInvNo As System.Nullable(Of Integer),  _
                    ByVal LastRcptNo As System.Nullable(Of Integer),  _
                    ByVal PreRcptNo As String,  _
                    ByVal LenRcptNo As System.Nullable(Of Integer),  _
                    ByVal AgentId As String,  _
                    ByVal LastCInvNo As System.Nullable(Of Integer),  _
                    ByVal PreCInvNo As String,  _
                    ByVal LenCInvNo As System.Nullable(Of Integer),  _
                    ByVal LastRtnNo As System.Nullable(Of Integer),  _
                    ByVal PreRtnNo As String,  _
                    ByVal LenRtnNo As System.Nullable(Of Integer),  _
                    ByVal LastExNo As System.Nullable(Of Integer),  _
                    ByVal PreExNo As String,  _
                    ByVal LenExNo As System.Nullable(Of Integer),  _
                    ByVal LastPrNo As System.Nullable(Of Integer),  _
                    ByVal PrePrNo As String,  _
                    ByVal LenPrNo As System.Nullable(Of Integer),  _
                    ByVal LastCustNo As System.Nullable(Of Integer),  _
                    ByVal PreCustNo As String,  _
                    ByVal LenCustNo As System.Nullable(Of Integer),  _
                    ByVal LastGTNo As System.Nullable(Of Integer),  _
                    ByVal PreGtNo As String,  _
                    ByVal LenGtNo As System.Nullable(Of Integer),  _
                    ByVal LastDONo As System.Nullable(Of Integer),  _
                    ByVal PreDoNo As String,  _
                    ByVal LenDoNo As System.Nullable(Of Integer),  _
                    ByVal Location As String,  _
                    ByVal PreITNo As String,  _
                    ByVal LenITNo As System.Nullable(Of Integer),  _
                    ByVal LastITNo As System.Nullable(Of Integer),  _
                    ByVal PreCRNo As String,  _
                    ByVal LenCRNo As System.Nullable(Of Integer),  _
                    ByVal LastCRNo As System.Nullable(Of Integer)) As Integer
            If (MDTNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MDTNo,String)
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (LastOrdNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LastOrdNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = System.DBNull.Value
            End If
            If (PreOrdNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PreOrdNo,String)
            End If
            If (LenOrdNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LenOrdNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = System.DBNull.Value
            End If
            If (LastInvNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LastInvNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = System.DBNull.Value
            End If
            If (PreInvNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PreInvNo,String)
            End If
            If (LenInvNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LenInvNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = System.DBNull.Value
            End If
            If (LastRcptNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LastRcptNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = System.DBNull.Value
            End If
            If (PreRcptNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PreRcptNo,String)
            End If
            If (LenRcptNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LenRcptNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (AgentId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(AgentId,String)
            End If
            If (LastCInvNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(LastCInvNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = System.DBNull.Value
            End If
            If (PreCInvNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PreCInvNo,String)
            End If
            If (LenCInvNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LenCInvNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = System.DBNull.Value
            End If
            If (LastRtnNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(LastRtnNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = System.DBNull.Value
            End If
            If (PreRtnNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PreRtnNo,String)
            End If
            If (LenRtnNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(LenRtnNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = System.DBNull.Value
            End If
            If (LastExNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(LastExNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = System.DBNull.Value
            End If
            If (PreExNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PreExNo,String)
            End If
            If (LenExNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(LenExNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = System.DBNull.Value
            End If
            If (LastPrNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(LastPrNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = System.DBNull.Value
            End If
            If (PrePrNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PrePrNo,String)
            End If
            If (LenPrNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(LenPrNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = System.DBNull.Value
            End If
            If (LastCustNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(LastCustNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = System.DBNull.Value
            End If
            If (PreCustNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PreCustNo,String)
            End If
            If (LenCustNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(LenCustNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = System.DBNull.Value
            End If
            If (LastGTNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LastGTNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = System.DBNull.Value
            End If
            If (PreGtNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PreGtNo,String)
            End If
            If (LenGtNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(LenGtNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = System.DBNull.Value
            End If
            If (LastDONo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(LastDONo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = System.DBNull.Value
            End If
            If (PreDoNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(PreDoNo,String)
            End If
            If (LenDoNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(LenDoNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = System.DBNull.Value
            End If
            If (Location Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Location,String)
            End If
            If (PreITNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PreITNo,String)
            End If
            If (LenITNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(LenITNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = System.DBNull.Value
            End If
            If (LastITNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(LastITNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = System.DBNull.Value
            End If
            If (PreCRNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PreCRNo,String)
            End If
            If (LenCRNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(LenCRNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = System.DBNull.Value
            End If
            If (LastCRNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(LastCRNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And System.Data.ConnectionState.Open)  _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
End Namespace
